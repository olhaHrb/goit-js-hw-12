{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = 'https://pixabay.com/api/';\nconst API_KEY = '43873427-52524e51f424820d3ed845203';\nconst PER_PAGE = 15;\n\nexport async function fetchImg(searchquery, page) {\n    const params = `?key=${API_KEY}&image_type=photo&orientation=horizontal&safesearch=true&page=${page}&per_page=${PER_PAGE}`;\n    const {data} = await axios.get(`${BASE_URL}${params}&q=${searchquery}`)\n        return data;\n};\n","import SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nconst lightbox = new SimpleLightbox('.gallery a', {\n  captionsData: \"alt\",\n  captionsDelay: 250\n});\n\nconst galleryContainer = document.querySelector(\".gallery\");\n\n\nexport function renderImageCard(images) {\n    const markup = images.map(({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) => {\n      return (`\n        <li class=\"gallery-item\">\n            <a class=\"gallery-link\" href=${largeImageURL}>\n                <img class=\"gallery-image\" src=${webformatURL} alt=${tags} />\n            </a>\n            <ul class=\"gallery-caption\">\n              <li class=\"caption-item\">\n                <h3 class=\"caption-title\">Likes</h3>\n                <p class=\"caption-value\">${likes}</p>\n              </li>\n              <li class=\"caption-item\">\n                <h3 class=\"caption-title\">Views</h3>\n                <p class=\"caption-value\">${views}</p>\n              </li>\n              <li class=\"caption-item\">\n                <h3 class=\"caption-title\">Comments</h3>\n                <p class=\"caption-value\">${comments}</p>\n              </li>\n              <li class=\"caption-item\">\n                <h3 class=\"caption-title\">Downloads</h3>\n                <p class=\"caption-value\">${downloads}</p>\n              </li>\n            </ul>\n        </li>`)\n    }).join('');\n      galleryContainer.insertAdjacentHTML('beforeend', markup);\n      lightbox.refresh();\n};\n  ","import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nimport { fetchImg } from \"./js/pixabay-api\"; \nimport { renderImageCard } from \"./js/render-functions\";\n\nconst loader = document.querySelector('.loader');\nconst form = document.querySelector(\".form\");\nconst btnLoad = document.querySelector('.btn_load');\nconst galleryContainer = document.querySelector(\".gallery\");\nlet searchQuery = \"\";\nlet pageValue = 1;\n\nform.addEventListener(\"submit\", onFormSubmit);\nbtnLoad.addEventListener(\"click\", onBtnLoad)\n\nasync function onFormSubmit(event) {\n  event.preventDefault();\n  loader.classList.remove('is-hidden');\n  galleryContainer.innerHTML = \"\";\n\n  searchQuery = event.target.elements.searchInput.value.trim();\n\n  if (searchQuery === \"\") {\n    alert('Enter search query')\n    return;\n  };\n  \n  try {\n    const { hits, totalHits } = await fetchImg(searchQuery, pageValue);\n    \n    // перевірка на порожній масив\n    if (hits.length === 0) {\n      iziToast.error({\n        message: (`Sorry, there are no images matching your search query. Please try again!`),\n      });\n      btnLoad.classList.add('is-hidden');\n      return;\n    };\n\n    // перевірка totalHits\n\n\n    renderImageCard(hits);\n    btnLoad.classList.remove('is-hidden');\n\n  } catch (error) {\n    onFetchError(error);\n  } finally {\n    form.reset();\n    loader.classList.add('is-hidden');\n  };\n};\n\nfunction onFetchError(error) {\n  alert(error);\n}\n\nasync function onBtnLoad(event) {\n  loader.classList.remove('is-hidden');\n\n  pageValue += 1;\n  \n  try {\n    const { hits, totalHits } = await fetchImg(searchQuery, pageValue);\n    renderImageCard(hits);\n  } catch (error) {\n    onFetchError(error);\n  } finally {\n    loader.classList.add('is-hidden');\n  };\n\n}\n\n"],"names":["BASE_URL","API_KEY","PER_PAGE","fetchImg","searchquery","page","params","data","axios","lightbox","SimpleLightbox","galleryContainer","renderImageCard","images","markup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","loader","form","btnLoad","searchQuery","pageValue","onFormSubmit","onBtnLoad","event","hits","totalHits","iziToast","error","onFetchError"],"mappings":"owBAEA,MAAMA,EAAW,2BACXC,EAAU,qCACVC,EAAW,GAEV,eAAeC,EAASC,EAAaC,EAAM,CAC9C,MAAMC,EAAS,QAAQL,CAAO,iEAAiEI,CAAI,aAAaH,CAAQ,GAClH,CAAC,KAAAK,CAAI,EAAI,MAAMC,EAAM,IAAI,GAAGR,CAAQ,GAAGM,CAAM,MAAMF,CAAW,EAAE,EAClE,OAAOG,CACf,CCPA,MAAME,EAAW,IAAIC,EAAe,aAAc,CAChD,aAAc,MACd,cAAe,GACjB,CAAC,EAEKC,EAAmB,SAAS,cAAc,UAAU,EAGnD,SAASC,EAAgBC,EAAQ,CACpC,MAAMC,EAASD,EAAO,IAAI,CAAC,CAAE,aAAAE,EAAc,cAAAC,EAAe,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAS,IACvF;AAAA;AAAA,2CAE6BL,CAAa;AAAA,iDACPD,CAAY,QAAQE,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA,2CAK9BC,CAAK;AAAA;AAAA;AAAA;AAAA,2CAILC,CAAK;AAAA;AAAA;AAAA;AAAA,2CAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,2CAIRC,CAAS;AAAA;AAAA;AAAA,cAI/C,EAAE,KAAK,EAAE,EACRV,EAAiB,mBAAmB,YAAaG,CAAM,EACvDL,EAAS,QAAO,CACtB,CClCA,MAAMa,EAAS,SAAS,cAAc,SAAS,EACzCC,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAU,SAAS,cAAc,WAAW,EAC5Cb,EAAmB,SAAS,cAAc,UAAU,EAC1D,IAAIc,EAAc,GACdC,EAAY,EAEhBH,EAAK,iBAAiB,SAAUI,CAAY,EAC5CH,EAAQ,iBAAiB,QAASI,CAAS,EAE3C,eAAeD,EAAaE,EAAO,CAOjC,GANAA,EAAM,eAAc,EACpBP,EAAO,UAAU,OAAO,WAAW,EACnCX,EAAiB,UAAY,GAE7Bc,EAAcI,EAAM,OAAO,SAAS,YAAY,MAAM,OAElDJ,IAAgB,GAAI,CACtB,MAAM,oBAAoB,EAC1B,MAEJ,CACE,GAAI,CACF,KAAM,CAAE,KAAAK,EAAM,UAAAC,CAAW,EAAG,MAAM5B,EAASsB,EAAaC,CAAS,EAGjE,GAAII,EAAK,SAAW,EAAG,CACrBE,EAAS,MAAM,CACb,QAAU,0EAClB,CAAO,EACDR,EAAQ,UAAU,IAAI,WAAW,EACjC,MACN,CAKIZ,EAAgBkB,CAAI,EACpBN,EAAQ,UAAU,OAAO,WAAW,CAErC,OAAQS,EAAO,CACdC,EAAaD,CAAK,CACtB,QAAY,CACRV,EAAK,MAAK,EACVD,EAAO,UAAU,IAAI,WAAW,CACpC,CACA,CAEA,SAASY,EAAaD,EAAO,CAC3B,MAAMA,CAAK,CACb,CAEA,eAAeL,EAAUC,EAAO,CAC9BP,EAAO,UAAU,OAAO,WAAW,EAEnCI,GAAa,EAEb,GAAI,CACF,KAAM,CAAE,KAAAI,EAAM,UAAAC,CAAW,EAAG,MAAM5B,EAASsB,EAAaC,CAAS,EACjEd,EAAgBkB,CAAI,CACrB,OAAQG,EAAO,CACdC,EAAaD,CAAK,CACtB,QAAY,CACRX,EAAO,UAAU,IAAI,WAAW,CAEpC,CACA"}